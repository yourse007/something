package com.something.designPattern.proxy;

/**
 * 代理模式
 *
 * 代理模式用于增强核心服务逻辑，在真正的核心逻辑执行的前后，增加一些辅助的处理工作。
 *
 * 通常地，我们可以把代理模式分为静态代理和动态代理两种方式。静态代理指的是在代码编写阶段，我们就为真正的服务提供者(我们成为委托方)
 * 实现了对应的代理方，一般是通过代理类中持有委托类的方式，并将代理类实现与委托类相同的接口，这种思想类似于装饰者模式。
 */
public class Description {


}
